{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "STS REST Service",
    "description": "(D.03.07.10001) This document describes an interface where tokens can be requested using a REST interface, instead of the WS-Trust variant also supported.",
    "contact": {
      "name": "Martin Strandbygaard / Safewhere"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/rest/wstrust/v1/issue": {
      "post": {
        "summary": "Request a new SAML2.0 assertion",
        "description": "Request a new SAML2.0 assertion",
        "tags": [
          "STS"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The RequestWstrustToken element",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestSecurityToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RequestSecurityTokenResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Invalid data supplied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflicting request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/rest/oauth/v1/issue": {
      "post": {
        "summary": "Request a new JWT access token",
        "description": "Request a new JWT access token",
        "tags": [
          "STS"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "client_id is the Identifier of a ServiceMetadata, similar to the “AppliesTo” parameter of the endpoint to issue the SAML token.",
            "required": true,
            "type": "string"
          },
          {
            "name": "grant_type",
            "in": "query",
            "description": "must be always 'client_credentials'",
            "required": true,
            "type": "string",
            "default": "client_credentials"
          },
          {
            "name": "scope",
            "in": "query",
            "description": "this custom scope parameter has the following format: [entityid:{Identifier},anvenderkontekst:{cvr},onbehalfof:{thumbprint}]. The entityid and anvenderkontekst parameters are required.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AccessTokenResponse"
            }
          },
          "400": {
            "description": "OAuth 2.0 Error Response",
            "schema": {
              "$ref": "#/definitions/OAuthErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Anvenderkontekst": {
      "description": "An Anvenderkontekst (user context)",
      "required": [
        "Cvr"
      ],
      "properties": {
        "Cvr": {
          "type": "string",
          "description": "The CVR of the organization this Anvenderkontekst (user context) represents"
        }
      }
    },
    "AppliesTo": {
      "description": "The AppliesTo",
      "required": [
        "EndpointReference"
      ],
      "properties": {
        "EndpointReference": {
          "$ref": "#/definitions/EndpointReference"
        }
      }
    },
    "EndpointReference": {
      "description": "The EndpointReference",
      "required": [
        "Address"
      ],
      "properties": {
        "Address": {
          "description": "The address of this endpoint reference",
          "type": "string"
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RequestSecurityToken": {
      "description": "A `RequestSecurityToken` message",
      "required": [
        "AppliesTo",
        "KeyType",
        "RequestType",
        "TokenType",
        "UseKey"
      ],
      "properties": {
        "Anvenderkontekst": {
          "description": "The Anvenderkontekst for this token",
          "$ref": "#/definitions/Anvenderkontekst"
        },
        "AppliesTo": {
          "description": "The AppliesTo",
          "$ref": "#/definitions/AppliesTo"
        },
        "KeyType": {
          "description": "The type of key in use. This value MUST be specified as \"http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey\" or \"http://schemas.microsoft.com/idfx/keytype/asymmetric\"",
          "type": "string"
        },
        "OnBehalfOf": {
          "description": "The bootstrap token for the user this token should be issued on behalf of. This must be either the base64 encoded X.509v3 certificate (for proxy-OnBehalfOf) or the assertion (for regular OnBehalfOf).",
          "type": "string"
        },
        "RequestType": {
          "type": "string",
          "description": "Must be set to \"http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue\" or \"http://schemas.microsoft.com/idfx/requesttype/issue\""
        },
        "TokenType": {
          "description": "Must be set to http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0",
          "type": "string"
        },
        "UseKey": {
          "description": "The UseKey element of the RST. Should contain a base64 encoded X.509v3 certificate.",
          "type": "string"
        }
      }
    },
    "RequestSecurityTokenResponse": {
      "description": "A RequestSecurityTokenResponse message",
      "properties": {
        "AppliesTo": {
          "description": "The AppliesTo",
          "$ref": "#/definitions/AppliesTo"
        },
        "KeyType": {
          "type": "string",
          "description": "The type of key in use"
        },
        "Lifetime": {
          "type": "string",
          "description": "The lifetime of the issued token"
        },
        "RequestedSecurityToken": {
          "description": "The RequestedSecurityToken",
          "$ref": "#/definitions/RequestedSecurityToken"
        },
        "RequestType": {
          "type": "string",
          "description": "Must be set to http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue"
        },
        "TokenType": {
          "description": "Must be set to http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile- 1.1#SAMLV2.0",
          "type": "string"
        }
      }
    },
    "RequestedSecurityToken": {
      "description": "The RequestedSecurityToken",
      "required": [
        "Assertion"
      ],
      "properties": {
        "Assertion": {
          "type": "string",
          "description": "The base64 encoded value of the issued SAML2.0 token"
        }
      }
    },
    "AccessTokenResponse": {
      "description": "The AS issues an access token and constructs the response by adding the following parameters (access_token, token_type and expire_in) to the entity-body of the HTTP response with a 200 (OK) status code.",
      "required": [
        "error"
      ],
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The JWT access token."
        },
        "token_type": {
          "type": "string",
          "description": "The OAuth 2.0 token type. It is always 'bearer'."
        },
        "expires_in": {
          "type": "number",
          "description": "The number of seconds until the access token is expired."
        }
      }
    },
    "OAuthErrorResponse": {
      "description": "The AS responds with an HTTP 400 (Bad Request) status code and includes the “error” and “error_description” with the response.",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string",
          "description": "The OAuth 2.0 error code"
        },
        "error_description": {
          "type": "string",
          "description": "The OAuth 2.0 error description"
        }
      }
    }
  }
}