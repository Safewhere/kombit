{
  "swagger" : "2.0",
  "info" : {
    "version" : "2.0.1",
    "title" : "Provisioning service",
    "description" : "(D.03.08.10000) Provisioning service for St√∏ttesystem Context Handler",
    "contact" : {
      "name" : "Martin Strandbygaard / Safewhere"
    }
  },
  "schemes" : [
    "https"
  ],
  "consumes" : [
    "application/json"
  ],
  "produces" : [
    "application/json"
  ],
  "paths" : {
    "/AttributServices" : {
      "get" : {
        "summary" : "Get all attribute services",
        "description" : "Get all attribute services",
        "tags" : [
          "IdP"
        ],
        "operationId" : "getAllAttributeServices",
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response. A list of Id's of all AttributeService objects.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new attribute service",
        "description" : "Create a new attribute service",
        "tags" : [
          "IdP"
        ],
        "operationId" : "createAttributeService",
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "in" : "body",
            "name" : "body",
            "description" : "The AttributeService to create",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/AttributeService"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AttributServices/{id}" : {
      "get" : {
        "summary" : "Get a specific AttributeService",
        "description" : "Get a specific `AttributeService`",
        "tags" : [
          "IdP"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the attribute service to get. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/AttributeService"
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update an existing attribute service",
        "description" : "Update an existing attribute service",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the attribute service to update. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          },
          {
            "in" : "body",
            "name" : "body",
            "description" : "The updated AttributeService",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/AttributeService"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a specific AttributeService",
        "description" : "Delete a specific `AttributeService`",
        "tags" : [
          "IdP"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the attribute service to delete. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AttributServices/{id1}/Anvenderkontekster" : {
      "put" : {
        "summary" : "Add an Anvenderkontekst to this attribute service",
        "description" : "Add an `Anvenderkontekst` (user context) to the list of Anvenderkontekster on this attribute service",
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the attribute service. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The list of anvenderkontekst to add",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Anvenderkontekst"
              }
            }
          }
        ],
        "tags" : [
          "IdP"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AttributServices/{id1}/Anvenderkontekster/{id2}" : {
      "delete" : {
        "summary" : "Delete an Anvenderkontekst from this attribute service",
        "description" : "Delete an `Anvenderkontekst` (user context) from the list of Anvenderkontekster on this attribute service",
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the attribute service. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the anvenderkontekst",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AttributServices/{id1}/Anvenderkontekster/{id2}/Aktiveringstidspunkt" : {
      "put" : {
        "summary" : "Set the Akteringstidspunkt (activation times) for this attribute service",
        "description" : "Set the `Aktiveringstidspunkt` (activation time) for this attribute service",
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the attribute service. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the anvenderkontekst to set the activation time for",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The aktiveringstidspunkt (activation time) to set",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Aktiveringstidspunkt"
            }
          }
        ],
        "tags" : [
          "IdP"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AttributServices/{id}/SamlMetadata" : {
      "put" : {
        "summary" : "Add a SAML2.0 metadata document on this AttributService",
        "description" : "Add a SAML2.0 metadata document on this `AttributeService`",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the attribute service. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "A list of metadata elements to add. The list MUST contain exactly one element.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SamlMetadata"
              }
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AttributServices/{id1}/SamlMetadata/{id2}" : {
      "delete" : {
        "summary" : "Delete a SAML2.0 metadata document from this AttributService",
        "description" : "Delete a SAML2.0 metadata document from this `AttributeService`",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the attribute service. The id must be the base64 encoded entityId. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the metadata to delete",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Brugersystemroller" : {
      "get" : {
        "summary" : "Get all user system roles",
        "description" : "Get all user system roles",
        "tags" : [
          "Role"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response. A list of id's of all Brugersystemrolle (user system role) objects",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new user system role",
        "description" : "Create a new user system role",
        "tags" : [
          "Role"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "in" : "body",
            "name" : "body",
            "description" : "The user system role to create",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Brugersystemrolle"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Brugersystemroller/{id}" : {
      "get" : {
        "summary" : "Get a specific user system role",
        "description" : "Get a specific user system role ",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system role to get. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "Role"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Brugersystemrolle"
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update an existing user system role",
        "description" : "Update an existing user system role",
        "tags" : [
          "Role"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system role to update. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "in" : "body",
            "name" : "body",
            "description" : "The user system role to update",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Brugersystemrolle"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a specific user system role",
        "description" : "Delete a specific user system role ",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system role to delete. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "Role"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Brugersystemroller/{id}/Aktiveringstidspunkt" : {
      "put" : {
        "summary" : "Set the Aktiveringstidspunkt (activation time) on the specified user system role",
        "description" : "Set the Aktiveringstidspunkt (activation time) on the specified user system role",
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system role to add activation times for. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The Aktiveringstidspunkt (activation time) to set",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Aktiveringstidspunkt"
            }
          }
        ],
        "tags" : [
          "Role"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Brugersystemroller/{id}/Dataafgraensningstyper" : {
      "put" : {
        "summary" : "Add data restrictions to the user system role",
        "description" : "Add a data restriction to the user system role",
        "tags" : [
          "Role"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system role to add data restrictions for. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The data restriction to add",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Dataafgraensningstype"
              }
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Brugersystemroller/{id1}/Dataafgraensningstyper/{id2}" : {
      "delete" : {
        "summary" : "Delete a data restriction from a user system role",
        "description" : "Delete a data restriction from a user system role",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the user system role to delete a data restriction for. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the data restriction to delete. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "Role"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrugervendteSystemer" : {
      "get" : {
        "summary" : "Get all user systems",
        "description" : "Get all user systems",
        "tags" : [
          "Role"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response. A list of id's of all Brugervendtsystem (user system) objects.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new BrugervendtSystem",
        "description" : "Create a new `BrugervendtSystem`",
        "tags" : [
          "SP"
        ],
        "operationId" : "createBrugervendtSystem",
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "in" : "body",
            "name" : "body",
            "description" : "The BrugervendtSystem to create",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/BrugervendtSystem"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrugervendteSystemer/{id}" : {
      "get" : {
        "summary" : "Get a specific BrugervendtSystem",
        "description" : "Get a specific `BrugervendtSystem`",
        "tags" : [
          "SP"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the BrugervendtSystem to get. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/BrugervendtSystem"
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a specific BrugervendtSystem",
        "description" : "Update a specific `BrugervendtSystem`",
        "tags" : [
          "SP"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the BrugervendtSystem to update. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          },
          {
            "in" : "body",
            "name" : "body",
            "description" : "The BrugervendtSystem to update",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/BrugervendtSystem"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a specific BrugervendtSystem",
        "description" : "Delete a specific `BrugervendtSystem`",
        "tags" : [
          "SP"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the BrugervendtSystem to delete. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrugervendteSystemer/{id}/AssuranceLevel/{value}" : {
      "put" : {
        "summary" : "Set the minimum required assurance level for this BrugervendtSystem (user system)",
        "description" : "Set the minimum required assurance level for this `BrugervendtSystem` (user system)",
        "tags" : [
          "SP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system to set assurance level for. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "value",
            "in" : "path",
            "description" : "The minimum requested assurance level for this user system",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrugervendteSystemer/{id}/SamlMetadata" : {
      "put" : {
        "summary" : "Add a SAML metadata version on the specified user system",
        "description" : "Add a `SamlMetadata` version on the specified `BrugervendtSystem`",
        "tags" : [
          "SP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system to add SAML2.0 metadata version for. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The metadata to add",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/SamlMetadata"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrugervendteSystemer/{id1}/SamlMetadata/{id2}" : {
      "delete" : {
        "summary" : "Delete a SAML metadata version on the specified user system",
        "description" : "Delete a `SamlMetadata` version on the specified `BrugervendtSystem`",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the user system to delete a SAML2.0 metadata version for. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the SAML2.0 metadata version to delete",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "SP"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrugervendteSystemer/{id}/RoleMappings" : {
      "put" : {
        "summary" : "Add a role mapping on the specified user system",
        "description" : "Add `RoleMapping` items on the specified `BrugervendtSystem`",
        "tags" : [
          "SP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the user system to add role mappings for. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The role mappings to add",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RoleMapping"
              }
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrugervendteSystemer/{id1}/RoleMappings/{id2}" : {
      "delete" : {
        "summary" : "Delete a role mapping on the specified user system",
        "description" : "Delete a `RoleMapping` item on the specified `BrugervendtSystem`",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the user system to delete the role mapping from. This is the SAML2.0 entityId of the BrugervendtSystem. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the role mapping to delete. This is the SAML2.0 attribute name of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "SP"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders" : {
      "get" : {
        "summary" : "Get all identity providers",
        "description" : "Get all identity providers",
        "tags" : [
          "Role"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response. A list of id's (entityId) of all identity provider objects.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new identity provider",
        "description" : "Create a new `IdentityProvider`",
        "tags" : [
          "IdP"
        ],
        "operationId" : "createIdentityProvider",
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "in" : "body",
            "name" : "body",
            "description" : "The IdentityProvider to create",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/IdentityProvider"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}" : {
      "get" : {
        "summary" : "Get a specific IdentityProvider object.",
        "description" : "Get a specific `IdentityProvider` object.",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the `IdentityProvider` to get. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "IdP"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/IdentityProvider"
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a specific IdentityProvider object.",
        "description" : "Update a specific `IdentityProvider` object.",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the `IdentityProvider` to get. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "in" : "body",
            "name" : "body",
            "description" : "The IdentityProvider to update",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/IdentityProvider"
            }
          }
        ],
        "tags" : [
          "IdP"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a specific IdentityProvider object.",
        "description" : "Delete a specific `IdentityProvider` object.",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the `IdentityProvider` to delete. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "IdP"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/Anvenderkontekster" : {
      "put" : {
        "summary" : "Add user contexts the list on the specified identity provider",
        "description" : "Add a list of `Anvenderkontekst` (user context) to the list on the specified `IdentityProvider`. The list is appended to the existing list on the specified identity provider.",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider to add an anvenderkontekst (user context) for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The anvenderkontekst (user context) to add",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Anvenderkontekst"
              }
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id1}/Anvenderkontekster/{id2}" : {
      "delete" : {
        "summary" : "Delete an anvenderkontekst (user context) on the specified IdentityProvider",
        "description" : "Delete an `Anvenderkontekst` (user context) on the specified `IdentityProvider`",
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the IdentityProvider to delete an anvenderkontekst for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the anvenderkontekst to delete",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id1}/Anvenderkontekster/{id2}/Aktiveringstidspunkt" : {
      "put" : {
        "summary" : "Set the Akteringstidspunkt (activation time) on this Anvenderkontekst (user context)",
        "description" : "Set the `Aktiveringstidspunkt` (activation time) on this `Anvenderkontekst` (user context)",
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the IdentityProvider. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the anvenderkontekst to set the activation time for",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The Aktiveringstidspunkt (activation times) to set",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Aktiveringstidspunkt"
            }
          }
        ],
        "tags" : [
          "IdP"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/AssuranceLevel/{value}" : {
      "put" : {
        "summary" : "Set the assurance level provided by this identity provider",
        "description" : "Set the assurance level provided by this identity provider",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider to set mobile friendly for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "value",
            "in" : "path",
            "description" : "The provided assurance level",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/Beskrivelse" : {
      "put" : {
        "summary" : "Set the Beskrivelse (description) of this identity provider",
        "description" : "Set the Beskrivelse (description) of this identity provider",
        "tags" : [
          "IdP"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The Beskrivelse (description) of this identity provider",
            "required" : true,
            "schema" : {
              "type" : "string",
              "title" : "Beskrivelse",
              "description" : "The Beskrivelse (description) of this identity provider."
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/IpAdresser" : {
      "put" : {
        "summary" : "Add IP addresses to the list of IP addresses for which this IdP should be pre-selected.",
        "description" : "Add IP addresses to the list of IP addresses for which this IdP should be pre-selected.",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider to add IP addresses for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The IP addresses to add",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id1}/IpAdresser/{id2}" : {
      "delete" : {
        "summary" : "Delete an IP address from the list of IP addresses for which this IdP should be pre-selected.",
        "description" : "Delete an IP address from the list of IP addresses for which this IdP should be pre-selected.",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the identity provider to delete an IP address for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The IP address to delete",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/KenderRoller/{value}" : {
      "put" : {
        "summary" : "Set if this identity provider can issue JobfunktionsRoller (job function roles)",
        "description" : "Set if this identity provider can issue JobfunktionsRoller (job function roles)",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "value",
            "in" : "path",
            "description" : "true/false if the identity provider can issue JobfunktionsRoller (job function roles)",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/Mobilvenlig/{value}" : {
      "put" : {
        "summary" : "Set if this identity provider is mobile friendly",
        "description" : "Set if this identity provider is mobile friendly",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider to set mobile friendly for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "value",
            "in" : "path",
            "description" : "true/false if the identity provider is mobile friendly",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/Praesentationsnavn" : {
      "put" : {
        "summary" : "Set the Pr√¶sentationsnavn (display name) of this identity provider",
        "description" : "Set the Pr√¶sentationsnavn (display name) of this identity provider",
        "tags" : [
          "IdP"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The Pr√¶sentationsnavn (display name) of this identity provider",
            "required" : true,
            "schema" : {
              "type": "string",
              "title": "Praesentationsnavn",
              "description": "The Pr√¶sentationsnavn (display name) of this identity provider."
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id}/SamlMetadata" : {
      "put" : {
        "summary" : "Add a SAML metadata version on the specified IdentityProvider",
        "description" : "Add a `SamlMetadata` version on the specified `IdentityProvider`",
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the identity provider to add SAML2.0 metadata for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The metadata to add",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/SamlMetadata"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IdentityProviders/{id1}/SamlMetadata/{id2}" : {
      "delete" : {
        "summary" : "Delete a SamlMetadata version on the specified IdentityProvider",
        "description" : "Delete a `SamlMetadata` version on the specified `IdentityProvider`",
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the IdentityProvider to delete a SAML2.0 metadata version for. This is the SAML2.0 entityId of the IdentityProvider. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the SAML2.0 metadata version to delete. This is the ID attribute of the EntityDescriptor element in the saml metadata document.",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "IdP"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Jobfunktionsroller" : {
      "get" : {
        "summary" : "Get all job function roles",
        "description" : "Get all job function roles",
        "tags" : [
          "Role"
        ],
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response. A list of id's (SAML2.0 attribute name) of all Jobfunktionsrolle (job function role) objects.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new JobfunktionsRolle (job function role)",
        "description" : "Creates a new `Jobfunktionsrolle`.",
        "tags" : [
          "Role"
        ],
        "operationId" : "createJobfunktionsrolle",
        "produces" : [
          "application/json"
        ],
        "consumes" : [
          "application/json"
        ],
        "parameters" : [
          {
            "in" : "body",
            "name" : "body",
            "description" : "The job function role to create",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Jobfunktionsrolle"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Jobfunktionsroller/{id}" : {
      "get" : {
        "summary" : "Get a specific job function role",
        "description" : "Get a specific `Jobfunktionsrolle` object. To get the object, it is necessary to know the ID of the object to be deleted. This can be found, by first getting a list of all job function roles, findings the role with the specific Version to be retrieved, and the calling get with the ID of the found role.",
        "tags" : [
          "Role"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the job function role to get. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          }
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Jobfunktionsrolle"
            }
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a specific job function role",
        "description" : "Update a specific `Jobfunktionsrolle` object",
        "tags" : [
          "Role"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the job function role to get. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          },
          {
            "in" : "body",
            "name" : "body",
            "description" : "The updated job function role",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Jobfunktionsrolle"
            }
          }
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a specific job function role",
        "description" : "Delete a specific `Jobfunktionsrolle` object. To delete the object, it is necessary to know the ID of the object to be deleted. This can be found, by first getting a list of all job function roles, findings the role with the specific Version to be deleted, and the calling delet with the ID of the found role.",
        "tags" : [
          "Role"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the job function role to delete. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "type" : "string",
            "required" : true
          }
        ],
        "produces" : [
          "application/json"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Jobfunktionsroller/{id}/Aktiveringstidspunkt" : {
      "put" : {
        "summary" : "Set the Aktiveringstidspunkt (activation time) on the Jobfunktionsrolle (job function role)",
        "description" : "Set the `Aktiveringstidspunkt` (activation time) on the `Jobfunktionsrolle` (job function role)",
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "tags" : [
          "Role"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the job function role to set the activation time for. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The Aktiveringstidspunkt (activation time) to set",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Aktiveringstidspunkt"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Jobfunktionsroller/{id}/DelegeretTil" : {
      "put" : {
        "summary" : "Append a list of Anvenderkontekst (user context) to the JobfunktionsRolle (job function role)",
        "description" : "Append a list of `Anvenderkontekst` (user context) to the `Jobfunktionsrolle` (job funktion role)",
        "consumes" : [
          "application/json"
        ],
        "produces" : [
          "application/json"
        ],
        "tags" : [
          "Role"
        ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The id of the job function role to append Anvenderkontekst for. This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "body",
            "in" : "body",
            "description" : "The Anvenderkontekst to add",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Anvenderkontekst"
              }
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Jobfunktionsroller/{id1}/DelegeretTil/{id2}" : {
      "delete" : {
        "summary" : "Delete an Anvenderkontekst (user context) for the Jobfunktionsrolle (job function role)",
        "description" : "Delete an `Anvenderkontekst` (user context) for the `Jobfunktionsrolle` (job function role)",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "id1",
            "in" : "path",
            "description" : "The id of the Jobfunktionsrolle (job function role). This is the SAML2.0 attribute name, of the SAML2.0 attribute. The id must be the base64 encoded. See processing instructions for handling base64 encoding, to ensure interoperability.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "id2",
            "in" : "path",
            "description" : "The id of the Anvenderkontekst (user context) to delete",
            "required" : true,
            "type" : "string"
          }
        ],
        "tags" : [
          "Role"
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response"
          },
          "400" : {
            "description" : "Invalid data supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Unknown id",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflicting request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Unexpected server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Aktiveringstidspunkt" : {
      "description" : "Aktiveringstidspunkt (activation time). A time range, when an object is enabled",
      "properties" : {
        "Sluttidspunkt" : {
          "type" : "string",
          "description" : "The end time for this Aktiveringstidspunkt (activation time)"
        },
        "Starttidspunkt" : {
          "type" : "string",
          "description" : "The start time for this Aktiveringstidspunkt (activation time)"
        }
      }
    },
    "Anvenderkontekst" : {
      "description" : "Anvenderkontekst (a user context)",
      "properties" : {
        "Aktiveringstidspunkt" : {
          "$ref" : "#/definitions/Aktiveringstidspunkt"
        },
        "Cvr" : {
          "type" : "string",
          "description" : "The CVR of the organization this user context represents"
        }
      }
    },
    "AttributeService" : {
      "description" : "An attribute service",
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : "The SAML2.0 EntityId of the `AttributeService`"
        },
        "SamlMetadata" : {
          "description" : "A list of SAML2.0 metadata documents for this `AttributeService`",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SamlMetadata"
          }
        },
        "Anvenderkontekster" : {
          "description" : "A list of Anvenderkontekst (user context) this attribute service applies to",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Anvenderkontekst"
          }
        }
      }
    },
    "Brugersystemrolle" : {
      "description" : "Brugersystemrolle (user system role). A `Brugersystemrolle` (user system role) is related to exactly one `BrugervendtSystem`. A `BrugervendtSystem` can have 0 or more `Brugersystemrolle` related.",
      "required" : [
        "Id"
      ],
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : "The id of the role."
        },
        "Aktiveringstidspunkt" : {
          "$ref" : "#/definitions/Aktiveringstidspunkt"
        },
        "Dataafgraensningstyper" : {
          "description" : "A list of Dataafgraensningstyper (data restrictions) for this user system role",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Dataafgraensningstype"
          }
        }
      }
    },
    "BrugervendtSystem" : {
      "description" : "A BrugervendtSystem (user system)",
      "required" : [
        "AssuranceLevel",
        "Cvr",
        "Id",
        "SamlMetadata"
      ],
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : "The SAML2.0 EntityId of the `BrugervendtSystem`. The EntityId must be globally unique within the federation."
        },
        "AssuranceLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The requested assurance level of this Brugervendt system (user system). This property must be a value of 1-4."
        },
        "SamlMetadata" : {
          "description" : "A list SAML2.0 metadata documents for this `BrugervendtSystem`",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SamlMetadata"
          }
        },
        "RoleMappings" : {
          "description" : "A list of role mappings for this BrugervendtSystem (user system)",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleMapping"
          }
        },
        "Cvr" : {
          "type" : "string",
          "description" : "The CVR for the organization this BrugervendtSystem belongs to. This property is necessary to support the scoping element required by a proxy IdP in accordance with OIOSAML."
        }
      }
    },
    "Dataafgraensning" : {
      "description" : "A Dataafgraensning (data restriction) comprises a DRT and DRV, and can be thought of as an instantation of DRT",
      "required" : [
        "DataafgraensningstypeId"
      ],
      "properties" : {
        "DataafgraensningstypeId" : {
          "description" : "The Dataafgraensningstype (data restriction type) for this Dataafgraensnings (data restriction). This is the ID of the Dataafgraensningstype, which is defined as a URL.",
          "type" : "string"
        },
        "Values" : {
          "description" : "The values",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Dataafgraensningstype" : {
      "description" : "A Dataafgraensningstype (data restriction type)",
      "properties" : {
        "Id" : {
          "description" : "The id (namespace) of this Dataafgr√¶nsningstype (data restriction type)",
          "type" : "string"
        },
        "SyntaxDefinition" : {
          "description" : "Definition of the syntax that is used to define this data restriction",
          "type" : "string"
        },
        "PresentationPreference" : {
          "description" : "The presentation preference of this data restriction type",
          "type" : "string"
        },
        "ValidationService" : {
          "description" : "The URL of a validation service",
          "type" : "string"
        },
        "PresentationName" : {
          "description" : "The presentation name of this data restriction type",
          "type" : "string"
        },
        "Description" : {
          "description" : "A description of this data restriction type",
          "type" : "string"
        }
      }
    },
    "Error" : {
      "required" : [
        "code",
        "message"
      ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "IdentityProvider" : {
      "description" : "An identity provider.",
      "required" : [
        "Id",
        "Beskrivelse",
        "AssuranceLevel",
        "KenderRoller",
        "Mobilvenlig",
        "Praesentationsnavn",
        "SamlMetadata"
      ],
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : "The SAML2.0 EntityId of the IdentityProvider. The SAML2.0 EntityId must be globally unique within the federation, and thus cannot be used by any other identity provider or user system."
        },
        "Anvenderkontekster" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Anvenderkontekst"
          }
        },
        "AssuranceLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The supported assurance level of this IdentityProvider. This property must be a value of 1-4."
        },
        "Beskrivelse" : {
          "type" : "string",
          "description" : "Describes this identity provider"
        },
        "KenderRoller" : {
          "type" : "boolean",
          "description" : "Specifies is this IdentityProvider issue JobFunktionsRoller (job function roles)"
        },
        "Mobilvenlig" : {
          "type" : "boolean",
          "description" : "Specifies if this IdentityProvider should be enabled for mobile use"
        },
        "Praesentationsnavn" : {
          "type" : "string",
          "description" : "The name this identity provider will be presented as to the user"
        },
        "SamlMetadata" : {
          "description" : "A list SAML2.0 metadata documents for this IdentityProvider",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SamlMetadata"
          }
        },
        "IpAdresser" : {
          "description" : "A list of IP addresses. If a user comes from one of these IP addresses, then this identity provider will be automatically selected, if it is the only identity provider for which the addreses are registered.",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Jobfunktionsrolle" : {
      "description" : "Job funktions rolle (job function role)",
      "required" : [
        "Id"
      ],
      "properties" : {
        "Id" : {
          "description" : "The id of the job function role.",
          "type" : "string"
        },
        "Version" : {		
          "type" : "string",		
          "description" : "The version of the job function role. The last part of the JFR name is always '/[version]', e.g. '/1', and this property must be set to '[version]' for this JFR, e.g. '1'"		
        },
        "Aktiveringstidspunkt" : {
          "$ref" : "#/definitions/Aktiveringstidspunkt"
        },
        "DelegeretTil" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Anvenderkontekst"
          }
        },
        "Anvenderkontekst" : {
          "$ref" : "#/definitions/Anvenderkontekst"
        }
      }
    },
    "RoleMapping" : {
      "description" : "Defines a mapping between a job function role, and a Brugersystemrolle (user system role) including data restrictions.",
      "required" : [
        "Id",
        "JobfunktionsrolleId",
        "BrugersystemrolleId"
      ],
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : "The Id of this role mapping. The Id is a compound id comprised of the id of the Jobfunktionsrolle (job function role), and the id's of the Brugersystemroller (user system roles)"
        },
        "JobfunktionsrolleId" : {
          "description" : "The Id of the job function role to map from",
          "type" : "string"
        },
        "BrugersystemrolleId" : {
          "description" : "The Id of the Brugersystemrolle to map to",
          "type" : "string"
        },
        "Dataafgraensninger" : {
          "description" : "A list of Dataafgraensninger (data restrictions) for this role mapping. The DRT for each Dataafgraensning element has to match one or more Brugersystemrolle in this RoleMapping.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Dataafgraensning"
          }
        }
      }
    },
    "SamlMetadata" : {
      "description" : "Represents a SAML2.0 metadata document",
      "required" : [
        "Id",
        "Xml"
      ],
      "properties" : {
        "Aktiveringstidspunkt" : {
          "$ref" : "#/definitions/Aktiveringstidspunkt"
        },
        "Id" : {
          "type" : "string",
          "description" : "The id of this metadata document. The id also corresponds to the version of this metadata document. The id (or version) is computed derived from the certificate present in the metadta. Per the business rules, a different certificate must be used for each version of a metadata document."
        },
        "Xml" : {
          "type" : "string",
          "description" : "A base64 encoded string with the XML of the SAML2.0 metadata document"
        }
      }
    }
  }
}